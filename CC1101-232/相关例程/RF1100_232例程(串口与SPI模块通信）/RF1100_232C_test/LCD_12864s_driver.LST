C51 COMPILER V8.08   LCD_12864S_DRIVER                                                     05/11/2009 16:31:58 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE LCD_12864S_DRIVER
OBJECT MODULE PLACED IN LCD_12864s_driver.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE LCD_12864s_driver.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /****************************************************************************
   2           **             - lcd_12864s_driver.C -
   3           **
   4           **    lcd_12864s_driver驱动程序的匹配C文档
   5           **
   6           **     
   7           **    移植到STC单片机（理论上可以用于51核的单片机）
   8           **    by misswhile @ hud       email: misswhile@hotmail.com
   9           **    File version: $2009.3.13$
  10           **
  11           ***************************************************************************/
  12          #include "lcd_12864s_driver.h"
  13          
  14          
  15          #define LCD_12864S_IO_INITIALIZTION()  \
  16          LCD_12864s_CS1 = 1;\
  17          LCD_12864s_RES = 0;\
  18          _nop_();\
  19          _nop_();\
  20          _nop_();\
  21          _nop_();\
  22          LCD_12864s_RES = 1;\
  23          _nop_();\
  24          _nop_();\
  25          _nop_();\
  26          _nop_()
  27          
  28          /*******************宏函数**************************/
  29          #define LCD_128164s_READ_DB() \
  30          (LCD_12864s_DB  = 0xff)
  31          
  32          #define LCD_12864s_WRITE_DB() \
  33          (LCD_12864s_DB  = 0x00)
  34          
  35          #ifdef ENABLE_LCD_12864s_BUSY
              #define LCD_12864s_BUSY() \
              LCD_128164s_READ_DB();\
              LCD_12864s_DB  = 0xff;\
              LCD_12864s_A0P = 0;\
              LCD_12864s_WR  = 1;\
              LCD_12864s_RD  = 0;\
              LCD_12864s_CS1 = 0;\
              while(LCD_12864s_DB_PIN>>7);\
              (LCD_12864s_CS1 = 1)
              #endif 
  46          
  47          
  48          #define LCD_12864s_COMMEND_PROCESS(com_type,format,com) ((com_type&(~format))|(com&format))
  49          
  50          #define LCD_12864s_DISPLAY_ON_OFF(factor) LCD_12864s_COMMEND_PROCESS(0xae,0x01,factor)
  51          
  52          #define LCD_12864s_START_LINE(factor) LCD_12864s_COMMEND_PROCESS(0x40,0x3f,factor)
  53          
  54          #define LCD_12864s_PAGE_ADDRESS(factor) LCD_12864s_COMMEND_PROCESS(0xb0,0x0f,factor)
  55          
C51 COMPILER V8.08   LCD_12864S_DRIVER                                                     05/11/2009 16:31:58 PAGE 2   

  56          #define LCD_12864s_COLUMN_ADDRESS_H(factor)  LCD_12864s_COMMEND_PROCESS(0x10,0x0f,factor)
  57          #define LCD_12864s_COLUMN_ADDRESS_L(factor)  LCD_12864s_COMMEND_PROCESS(0x00,0x0f,factor)
  58          
  59          #define LCD_12864s_ADC_SELECT(factor) LCD_12864s_COMMEND_PROCESS(0xa0,0x01,factor)
  60          
  61          #define LCD_12864s_DISPLAY_NORMAL_REVERSE(factor) LCD_12864s_COMMEND_PROCESS(0xa6,0x01,factor)
  62          
  63          #define LCD_12864s_BIAS_SET(factor) LCD_12864s_COMMEND_PROCESS(0xa2,0x01,factor)
  64          
  65          #define LCD_12864s_RESET(factor) LCD_12864s_COMMEND_PROCESS(0xe2,0x00,factor)
  66          
  67          #define LCD_12864s_COMMON_OUTPUT_MODE(factor) LCD_12864s_COMMEND_PROCESS(0xc0,0x0f,factor)
  68          
  69          #define LCD_12864s_POWER_CONTROLLER(factor)  LCD_12864s_COMMEND_PROCESS(0x28,0x07,factor)
  70          
  71          #define LCD_12864s_V5_REGULATOR(factor)  LCD_12864s_COMMEND_PROCESS(0x20,0x07,factor)
  72          
  73          #define LCD_12864s_ELECTRONIC_VOLUME_H(factor)  LCD_12864s_COMMEND_PROCESS(0x81,0x00,factor)
  74          #define LCD_12864s_ELECTRONIC_VOLUME_L(factor)  LCD_12864s_COMMEND_PROCESS(0x00,0x3f,factor)
  75          
  76          
  77          /******************************************基本函数********************************************/
  78          
  79          
  80          void Lcd12864sWdat(unsigned char dat)
  81          {
  82   1      #ifdef ENABLE_LCD_12864s_BUSY
                LCD_12864s_BUSY();
              #endif
  85   1        LCD_12864s_WRITE_DB();
  86   1        LCD_12864s_A0P = 1;
  87   1        LCD_12864s_WR  = 0;
  88   1        LCD_12864s_RD  = 1;
  89   1        LCD_12864s_CS1 = 0;
  90   1        LCD_12864s_DB = dat;
  91   1        LCD_12864s_WR  = 1;
  92   1        LCD_12864s_WR  = 1;
  93   1        LCD_12864s_CS1 = 1;
  94   1      }
  95          
  96          
  97          void Lcd12864sWcom(unsigned char com)
  98          {
  99   1      #ifdef ENABLE_LCD_12864s_BUSY
                LCD_12864s_BUSY();
              #endif
 102   1        LCD_12864s_WRITE_DB();
 103   1        LCD_12864s_A0P = 0;
 104   1        LCD_12864s_WR  = 0;
 105   1        LCD_12864s_RD  = 1;
 106   1        LCD_12864s_CS1 = 0;
 107   1        LCD_12864s_DB = com;
 108   1        LCD_12864s_WR  = 1;
 109   1        LCD_12864s_WR  = 1;
 110   1        LCD_12864s_CS1 = 1;
 111   1      }
 112          
 113          /****************************************扩展函数*******************************************/
 114          /*初始化函数*/
 115          void Lcd12864sInitializtion()
 116          {
 117   1        LCD_12864S_IO_INITIALIZTION();
C51 COMPILER V8.08   LCD_12864S_DRIVER                                                     05/11/2009 16:31:58 PAGE 3   

 118   1        Lcd12864sWcom(LCD_12864s_BIAS_SET(0x01));
 119   1        Lcd12864sWcom(LCD_12864s_ADC_SELECT(0x00));
 120   1        Lcd12864sWcom(LCD_12864s_COMMON_OUTPUT_MODE(0x00));
 121   1        Lcd12864sWcom(LCD_12864s_V5_REGULATOR(0x02));
 122   1        Lcd12864sWcom(LCD_12864s_ELECTRONIC_VOLUME_H(0x00));
 123   1        Lcd12864sWcom(LCD_12864s_ELECTRONIC_VOLUME_L(0x13));
 124   1        Lcd12864sWcom(LCD_12864s_POWER_CONTROLLER(0x07));
 125   1        Lcd12864sWcom(LCD_12864s_ADC_SELECT(0x01));
 126   1        Lcd12864sWcom(LCD_12864s_START_LINE(0x00));
 127   1        Lcd12864sWcom(LCD_12864s_DISPLAY_ON_OFF(0x01));
 128   1      }
 129          
 130          
 131          void Lcd12864sLocate(unsigned char page,unsigned char column)
 132          {
 133   1        Lcd12864sWcom(LCD_12864s_PAGE_ADDRESS(page));
 134   1        Lcd12864sWcom(LCD_12864s_COLUMN_ADDRESS_H((column+4)>>4));
 135   1        Lcd12864sWcom(LCD_12864s_COLUMN_ADDRESS_L(column+4));
 136   1      }
 137          
 138          void Lcd12864sCls()
 139          {
 140   1        unsigned char temp1,temp2;
 141   1        for(temp1=0;temp1<8;temp1++)
 142   1        {
 143   2          Lcd12864sLocate(temp1,0x00);
 144   2          for(temp2=0;temp2<128;temp2++)
 145   2          {
 146   3            Lcd12864sWdat(0x00);
 147   3          }
 148   2          Lcd12864sWdat(0x00);
 149   2        }
 150   1      }
 151          
 152          /****************************************常用函数*******************************************/
 153          
 154          void Lcd12864sAscPrintf(unsigned char page,unsigned char column,unsigned char const *p)
 155          { 
 156   1        unsigned char temp;
 157   1        
 158   1        Lcd12864sLocate(page,column);
 159   1        for (temp=0;temp<8;temp++)
 160   1        {
 161   2          Lcd12864sWdat(p[temp]);
 162   2        }
 163   1        Lcd12864sLocate(page+1,column);
 164   1        for (temp=8;temp<16;temp++)
 165   1        {
 166   2          Lcd12864sWdat(p[temp]);
 167   2        }
 168   1      }
 169          
 170          
 171          
 172          void Lcd12864sBmpPrintf(unsigned char page,unsigned char column,unsigned char const *p)
 173          {
 174   1        unsigned char width,height;
 175   1        unsigned int temp = 0x02;
 176   1        
 177   1        for(height=0;height< p[1]/8+((p[1]%8!=0x00)&0x01);height++)
 178   1        {
 179   2          Lcd12864sLocate(page+height,column);
C51 COMPILER V8.08   LCD_12864S_DRIVER                                                     05/11/2009 16:31:58 PAGE 4   

 180   2          for(width=0;width<p[0];width++)
 181   2          {
 182   3            Lcd12864sWdat(p[temp]);
 183   3            temp++;
 184   3          }
 185   2        } 
 186   1      }
 187          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
