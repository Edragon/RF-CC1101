C51 COMPILER V7.06   DS18B20                                                               05/05/2010 17:44:47 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE DS18B20.c LARGE BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include "DS18B20.h"
   2          #include <intrins.h>
   3          
   4          unsigned char tempL=0; //设全局变量
   5          unsigned char tempH=0; 
   6          unsigned char integer = 0;//测量到的温度的整数部分
   7          unsigned char decimal1 = 0;//小数第一位
   8          unsigned char decimal2 = 0;//小数第二位
   9          unsigned char decimal = 0;//两位小数
  10          unsigned char fg =0;
  11          
  12          
  13          void delay_1ms(void)
  14          {
  15   1              unsigned int i;
  16   1      
  17   1              for (i=1; i<(unsigned int)(xtal*142-2); ++i);   //xtal为晶振频率，单位MHz
  18   1      }
  19          
  20          void delay_ms(unsigned int n)
  21          {
  22   1              unsigned int i;
  23   1      
  24   1              for (i=0; i<n; ++i)
  25   1                      delay_1ms();
  26   1      }
  27          
  28          void delay_n_us(unsigned char n)
  29          {
  30   1              unsigned char i = 0;
  31   1              for (i=0; i<n-1; ++i)
  32   1              {
  33   2                      _nop_();
  34   2              }
  35   1      }
  36          /******************************************************************************/
  37          void Delay_us(unsigned char i)//延时函数                 num = 1  18.44 us 4   48us  8 65us       10  77.04us   100   663us
  38          {
  39   1              while(i--);
  40   1      
  41   1      }       
  42          /******************************************************************************/
  43          void Init_DS18B20(void)//初始化ds1820
  44          {
  45   1              unsigned char x=0;
  46   1      
  47   1              DQ = 1;    //DQ复位
  48   1              //Delay_us(8);  //稍做延时
  49   1              delay_n_us(10);
  50   1              DQ = 0;    //单片机将DQ拉低
  51   1              //Delay_us(80); //精确延时 大于 480us
  52   1              delay_n_us(480);
  53   1              DQ = 1;    //拉高总线
  54   1      //      Delay_us(8);      //65us
  55   1              delay_n_us(65);
C51 COMPILER V7.06   DS18B20                                                               05/05/2010 17:44:47 PAGE 2   

  56   1      
  57   1              //x = DQ;      //稍做延时后 如果x=0则初始化成功 x=1则初始化失败
  58   1              while (DQ == 0);
  59   1      
  60   1      
  61   1              Delay_us(20);
  62   1      }
  63          /******************************************************************************/
  64          unsigned char ReadOneChar_18B20(void)//读一个字节
  65          {
  66   1              unsigned char i=0;
  67   1              unsigned char dat = 0;
  68   1              for (i=8;i>0;i--)
  69   1              {
  70   2                      DQ = 0; // 给脉冲信号
  71   2                      dat>>=1;
  72   2                      DQ = 1; // 给脉冲信号
  73   2                      if(DQ)
  74   2                      dat|=0x80;
  75   2                      //Delay_us(4);
  76   2                      delay_n_us(60);
  77   2              }
  78   1              return(dat);
  79   1      }
  80          /******************************************************************************/
  81          void WriteOneChar_18B20(unsigned char dat)//写一个字节
  82          {                                                                               //数据线从高电平拉至低电平，产生写起始信号。15us之内将所需写的位送到数据线上
  83   1              unsigned char i=0;
  84   1              for (i=8; i>0; i--)
  85   1              {
  86   2                      DQ = 0;
  87   2                      DQ = dat&0x01;
  88   2                      //Delay_us(5);
  89   2                  delay_n_us(60);
  90   2                      DQ = 1;
  91   2                      dat>>=1;
  92   2              }
  93   1      }
  94          /******************************************************************************/
  95          void Adjust_res_18B20(char res) ///res 分别等于 0x1f, 0x3f, 0x5f 温度读数分辨率分别对应
  96                                     //              0.5, 0.25, 0.125   
  97          {
  98   1        Init_DS18B20();        //复位
  99   1        WriteOneChar_18B20(0xcc);  //跳过Rom
 100   1       WriteOneChar_18B20(0x4e);  //写暂存器
 101   1       WriteOneChar_18B20(0x02);  //写TH 
 102   1       WriteOneChar_18B20(0x01);  //写TL
 103   1        //WriteOneChar_18B20(0x5f);  //写结构寄存器
 104   1        WriteOneChar_18B20(res);
 105   1        Init_DS18B20();       //复位
 106   1        WriteOneChar_18B20(0xcc); //跳过Rom 
 107   1        WriteOneChar_18B20(0x48); //把暂存器内容写到EPRam中
 108   1      }
 109          
 110          /********************************************************************************/
 111          void ReadTemperature(void)//读取温度
 112          {
 113   1              //unsigned char a=0;
 114   1              //unsigned char b=0;
 115   1              //unsigned int t=0;
 116   1              //float tt=0;
 117   1              Init_DS18B20();
C51 COMPILER V7.06   DS18B20                                                               05/05/2010 17:44:47 PAGE 3   

 118   1              WriteOneChar_18B20(0xCC); // 跳过读序号列号的操作
 119   1              WriteOneChar_18B20(0x44); // 启动温度转换
 120   1              delay_ms(800);
 121   1              Init_DS18B20();
 122   1              WriteOneChar_18B20(0xCC); //跳过读序号列号的操作
 123   1              WriteOneChar_18B20(0xBE); //读取温度寄存器
 124   1      
 125   1              tempL=ReadOneChar_18B20(); //读出温度的低位LSB
 126   1              tempH=ReadOneChar_18B20(); //读出温度的高位MSB 
 127   1        
 128   1              if(tempH>0x7f)      //最高位为1时温度是负
 129   1              {
 130   2                      tempL=~tempL;         //补码转换，取反加一
 131   2                      tempH=~tempH+1;       
 132   2                      fg=0;      //读取温度为负时fg=0
 133   2          }
 134   1              integer = tempL/16+tempH*16;      //整数部分
 135   1              decimal1 = (tempL&0x0f)*10/16; //小数第一位
 136   1              decimal2 = (tempL&0x0f)*100/16%10;//小数第二位
 137   1              decimal=decimal1*10+decimal2; //小数两位
 138   1              /*
 139   1              a=ReadOneChar_18B20();  //读低8位
 140   1              b=ReadOneChar_18B20(); //读高8位
 141   1              t=b;
 142   1              t<<=8;
 143   1              t=t|a;
 144   1              tt=t*0.0625;
 145   1              t= tt*10+0.5; //放大10倍输出并四舍五入
 146   1              return(t);
 147   1              */
 148   1      
 149   1      
 150   1      }
 151          /******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
